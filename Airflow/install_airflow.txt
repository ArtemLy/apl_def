# Link
https://airflow.apache.org/docs/apache-airflow/stable/installation.html

# 20.07.2021
# Ставим Airflow на Windows :)

# Сейчас хотим поставить Ubuntu себе на комп чтоб на нём запускаться (без venv)

1. Переходим в Панель управления\Все элементы панели управления\Программы и компоненты
2. Слева в панеле жмём "Включение или отключение компонентов Windows"
3. В появившемся окне пролистываем вниз и активируем галочку напротив "Подсистема Windows для Linux"
4. Попросит ребутнуться - давай ребутнёмся.
5. После ребута лезем в Microsofr Store, ищем Ubuntu, скачиваем и запускаем.
6. При запуске попросит создать юзера - создаём, креды сохраняем/помним.
7. После установки выполняем поэтапно:
	a. Апдейт пакетов и установку PyPi:
		sudo apt-get install software-properties-common
		sudo apt-add-repository universe
		sudo apt-get update
		sudo apt-get install python3-pip  (используем python3 т.к. видит его, а не "python", не заморачиваемся пока)
	б. Отлично, поставили что нужно, ставим Airflow:
		
		Выполняем:
		
		AIRFLOW_VERSION=2.1.2
		PYTHON_VERSION="$(python3 --version | cut -d " " -f 2 | cut -d "." -f 1-2)"
		CONSTRAINT_URL="https://raw.githubusercontent.com/apache/airflow/constraints-${AIRFLOW_VERSION}/constraints-${PYTHON_VERSION}.txt"
		pip install "apache-airflow[async,postgres,google]==${AIRFLOW_VERSION}" --constraint "${CONSTRAINT_URL}"
		
		Ждём пока он подтянет всё.
		(можно, конечно, "python3 -m pip install apache-airflow" но не будем пока, мы с официальной доки)
		
	в. Скорее всего будут ошибки, что скрипты развёрнуты в месте, которого нет в PATH, фиксим это, выполнив:
		PATH=$PATH:~/.local/bin
8. Ну чтож, пора поднять базу для AF, выполняем
	airflow db init 
	(вообще говоря до пункта В мы не могли обратиться к airflow так, его не было видно)
9. Скорее всего нам поругается, что нет юзера, но создадим его по Api попозже
10. Запускаем web-морду, я выбрал 8001 порт:
	airflow webserver -p 8001
	
	Видим, что АФ поднялся:
		 ____________       _____________
 ____    |__( )_________  __/__  /________      __
____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
 _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
[2021-07-20 12:42:43,508] {dagbag.py:496} INFO - Filling up the DagBag from /dev/null
[2021-07-20 12:42:43,546] {manager.py:784} WARNING - No user yet created, use flask fab command to do it.
Running the Gunicorn Server with:
Workers: 4 sync
Host: 0.0.0.0:8001
Timeout: 120
Logfiles: - -
Access Logformat:
=================================================================
[2021-07-20 12:42:46 +0300] [6141] [INFO] Starting gunicorn 20.1.0
[2021-07-20 12:42:46 +0300] [6141] [INFO] Listening at: http://0.0.0.0:8001 (6141)
[2021-07-20 12:42:46 +0300] [6141] [INFO] Using worker: sync
[2021-07-20 12:42:46 +0300] [6143] [INFO] Booting worker with pid: 6143
[2021-07-20 12:42:46 +0300] [6144] [INFO] Booting worker with pid: 6144
[2021-07-20 12:42:46 +0300] [6145] [INFO] Booting worker with pid: 6145
[2021-07-20 12:42:46 +0300] [6146] [INFO] Booting worker with pid: 6146
...


Он запустил воркеров, которые будут обновляться, всё ок

11. Теперь можем обращаться на локалхост по порту 8001 и видеть web-интерфейс Airflow:

	http://localhost:8001/
 
12. Осталось создать юзера, размапить директорию для дагов , которая каждые 5 сек будет мониторится и использовать что нам нужно.